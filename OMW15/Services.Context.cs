//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OMW15
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SERVICEEF : DbContext
    {
        public SERVICEEF()
            : base("name=SERVICEEF")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ENGINEER> ENGINEERs { get; set; }
        public virtual DbSet<ORDERPIORITY> ORDERPIORITies { get; set; }
        public virtual DbSet<ORDERTYPE> ORDERTYPEs { get; set; }
        public virtual DbSet<PRODUCTGROUP> PRODUCTGROUPS { get; set; }
        public virtual DbSet<PROVISO> PROVISOes { get; set; }
        public virtual DbSet<ERRORCATEGORY> ERRORCATEGORies { get; set; }
        public virtual DbSet<WARRANTy> WARRANTIES { get; set; }
        public virtual DbSet<CUSTOMER> CUSTOMERS { get; set; }
        public virtual DbSet<MIX> MIXes { get; set; }
        public virtual DbSet<PMCONTRACT> PMCONTRACTs { get; set; }
        public virtual DbSet<PMMC> PMMCs { get; set; }
        public virtual DbSet<ORDERFIXED> ORDERFIXEDs { get; set; }
        public virtual DbSet<PRODUCT> PRODUCTS { get; set; }
        public virtual DbSet<ORDERMAINTENANCE> ORDERMAINTENANCEs { get; set; }
        public virtual DbSet<ORDERSPAREPART> ORDERSPAREPARTS { get; set; }
        public virtual DbSet<PMSCHEDULE> PMSCHEDULEs { get; set; }
    
        public virtual ObjectResult<usp_GetServiceJobList_Result> usp_GetServiceJobList(Nullable<int> selectedYear, string jobcode, string orderstatus)
        {
            var selectedYearParameter = selectedYear.HasValue ?
                new ObjectParameter("selectedYear", selectedYear) :
                new ObjectParameter("selectedYear", typeof(int));
    
            var jobcodeParameter = jobcode != null ?
                new ObjectParameter("jobcode", jobcode) :
                new ObjectParameter("jobcode", typeof(string));
    
            var orderstatusParameter = orderstatus != null ?
                new ObjectParameter("orderstatus", orderstatus) :
                new ObjectParameter("orderstatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetServiceJobList_Result>("usp_GetServiceJobList", selectedYearParameter, jobcodeParameter, orderstatusParameter);
        }
    }
}
